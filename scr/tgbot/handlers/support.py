from aiogram import types, Dispatcher

from settings.const import SUPPORT_CHAT
from aiogram.dispatcher.filters import Text
from tgbot.database.db_sqlite import DataBaseHelper

async def answer_to_user(message: types.Message):
    if message.chat.type != "group" or message.chat.type != "supergroup" and \
        str(message.chat.id) != SUPPORT_CHAT:
        await message.answer("–ù–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —á–∞—Ç")
    db = DataBaseHelper()
    try:
        if message.reply_to_message:
            answer_data = [
                message.text,
                message.reply_to_message.text.split("\n")[0]
                ]
            await message.bot.send_message(
                int(message.reply_to_message.text.split("\n")[1]),
                f"üîî<b>–û—Ç–≤–µ—Ç –æ—Ç —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏:</b>\n\n{message.text}"
            )
            db.answer_to_ticket(answer_data)
            await message.answer(
                "–û–±—Ä–∞—â–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ"
            )
        else:
            await message.answer("–î–ª—è –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ")
    except Exception:
        await message.answer(
            "–ù–µ —è–≤–ª—è–µ—Ç—Å—è –æ–±—Ä–∞—â–µ–Ω–∏–µ–º"
        )



async def show_actual(message: types.Message):
    await message.answer("<u>–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞—â–µ–Ω–∏—è:</u>")
    db = DataBaseHelper()
    data = db.show_active_ticket()
    if data == []:
        await message.answer(
            "–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –æ–±—Ä–∞—â–µ–Ω–∏–π –Ω–µ—Ç"
        )
    for i in data:
        await message.answer(
            f"{i[0]}\n" + \
            f"{i[1]}\n" + \
            "–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã –æ–±—Ä–∞—â–µ–Ω–∏—è\n" + \
            f"{i[2]}"
                )

def register_support_handlers(dp: Dispatcher):
    dp.register_message_handler(
        show_actual,
        Text("–ü–æ–∫–∞–∑–∞—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µüîÉ")
    )
    dp.register_message_handler(
        answer_to_user,
        state="*",
        chat_type=types.ChatType.GROUP
    )
